// Generated by the Protocol Buffers 3.0 compiler.  DO NOT EDIT!
// Source file "POGOProtos.Networking.Platform.Requests.proto"
// Syntax "Proto3"

import Foundation
import ProtocolBuffers


public func == (lhs: Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest, rhs: Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasBuyItemIntent == rhs.hasBuyItemIntent) && (!lhs.hasBuyItemIntent || lhs.buyItemIntent == rhs.buyItemIntent)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest, rhs: Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasItemId == rhs.hasItemId) && (!lhs.hasItemId || lhs.itemId == rhs.itemId)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest, rhs: Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasEncryptedSignature == rhs.hasEncryptedSignature) && (!lhs.hasEncryptedSignature || lhs.encryptedSignature == rhs.encryptedSignature)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public extension Pogoprotos.Networking.Platform.Requests {
  public struct PogoprotosNetworkingPlatformRequestsRoot {
    public static var sharedInstance : PogoprotosNetworkingPlatformRequestsRoot {
     struct Static {
         static let instance : PogoprotosNetworkingPlatformRequestsRoot = PogoprotosNetworkingPlatformRequestsRoot()
     }
     return Static.instance
    }
    public var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
    }
  }

  final public class BuyItemAndroidRequest : GeneratedMessage, GeneratedMessageProtocol {
    // see https://developer.android.com/google/play/billing/billing_reference.html table 4
    public private(set) var hasBuyItemIntent:Bool = false
    public private(set) var buyItemIntent:String = ""

    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasBuyItemIntent {
        try output.writeString(1, value:buyItemIntent)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasBuyItemIntent {
        serialize_size += buyItemIntent.computeStringSize(1)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest> {
      var mergedArray = Array<Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest? {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder().mergeFromData(data, extensionRegistry:Pogoprotos.Networking.Platform.Requests.PogoprotosNetworkingPlatformRequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
      return Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.classBuilder() as! Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder
    }
    public func getBuilder() -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
      return classBuilder() as! Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder
    }
    override public class func classBuilder() -> MessageBuilder {
      return Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder()
    }
    override public func classBuilder() -> MessageBuilder {
      return Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder()
    }
    public func toBuilder() throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder().mergeFrom(prototype)
    }
    override public func encode() throws -> Dictionary<String,AnyObject> {
      guard isInitialized() else {
        throw ProtocolBuffersError.InvalidProtocolBuffer("Uninitialized Message")
      }

      var jsonMap:Dictionary<String,AnyObject> = Dictionary<String,AnyObject>()
      if hasBuyItemIntent {
        jsonMap["buyItemIntent"] = buyItemIntent
      }
      return jsonMap
    }
    override class public func decode(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder.decodeToBuilder(jsonMap).build()
    }
    override class public func fromJSON(data:NSData) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder.fromJSONToBuilder(data).build()
    }
    override public func getDescription(indent:String) throws -> String {
      var output = ""
      if hasBuyItemIntent {
        output += "\(indent) buyItemIntent: \(buyItemIntent) \n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasBuyItemIntent {
               hashCode = (hashCode &* 31) &+ buyItemIntent.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest"
    }
    override public func className() -> String {
        return "Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest = Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest()
      public func getMessage() -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasBuyItemIntent:Bool {
           get {
                return builderResult.hasBuyItemIntent
           }
      }
      public var buyItemIntent:String {
           get {
                return builderResult.buyItemIntent
           }
           set (value) {
               builderResult.hasBuyItemIntent = true
               builderResult.buyItemIntent = value
           }
      }
      public func setBuyItemIntent(value:String) -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
        self.buyItemIntent = value
        return self
      }
      public func clearBuyItemIntent() -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder{
           builderResult.hasBuyItemIntent = false
           builderResult.buyItemIntent = ""
           return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      override public func clear() -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
        builderResult = Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest()
        return self
      }
      override public func clone() throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
        return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.builderWithPrototype(builderResult)
      }
      override public func build() throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest {
        let returnMe:Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest = builderResult
        return returnMe
      }
      public func mergeFrom(other:Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
        if other == Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest() {
         return self
        }
        if other.hasBuyItemIntent {
             buyItemIntent = other.buyItemIntent
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10:
            buyItemIntent = try input.readString()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
      override class public func decodeToBuilder(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
        let resultDecodedBuilder = Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder()
        if let jsonValueBuyItemIntent = jsonMap["buyItemIntent"] as? String {
          resultDecodedBuilder.buyItemIntent = jsonValueBuyItemIntent
        }
        return resultDecodedBuilder
      }
      override class public func fromJSONToBuilder(data:NSData) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder {
        let jsonData = try NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions(rawValue: 0))
        guard let jsDataCast = jsonData as? Dictionary<String,AnyObject> else {
          throw ProtocolBuffersError.InvalidProtocolBuffer("Invalid JSON data")
        }
        return try Pogoprotos.Networking.Platform.Requests.BuyItemAndroidRequest.Builder.decodeToBuilder(jsDataCast)
      }
    }

  }

  final public class BuyItemPokeCoinsRequest : GeneratedMessage, GeneratedMessageProtocol {
    public private(set) var hasItemId:Bool = false
    public private(set) var itemId:String = ""

    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasItemId {
        try output.writeString(1, value:itemId)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasItemId {
        serialize_size += itemId.computeStringSize(1)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest> {
      var mergedArray = Array<Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest? {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder().mergeFromData(data, extensionRegistry:Pogoprotos.Networking.Platform.Requests.PogoprotosNetworkingPlatformRequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
      return Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.classBuilder() as! Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder
    }
    public func getBuilder() -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
      return classBuilder() as! Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder
    }
    override public class func classBuilder() -> MessageBuilder {
      return Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder()
    }
    override public func classBuilder() -> MessageBuilder {
      return Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder()
    }
    public func toBuilder() throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder().mergeFrom(prototype)
    }
    override public func encode() throws -> Dictionary<String,AnyObject> {
      guard isInitialized() else {
        throw ProtocolBuffersError.InvalidProtocolBuffer("Uninitialized Message")
      }

      var jsonMap:Dictionary<String,AnyObject> = Dictionary<String,AnyObject>()
      if hasItemId {
        jsonMap["itemId"] = itemId
      }
      return jsonMap
    }
    override class public func decode(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder.decodeToBuilder(jsonMap).build()
    }
    override class public func fromJSON(data:NSData) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest {
      return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder.fromJSONToBuilder(data).build()
    }
    override public func getDescription(indent:String) throws -> String {
      var output = ""
      if hasItemId {
        output += "\(indent) itemId: \(itemId) \n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasItemId {
               hashCode = (hashCode &* 31) &+ itemId.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest"
    }
    override public func className() -> String {
        return "Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest = Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest()
      public func getMessage() -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasItemId:Bool {
           get {
                return builderResult.hasItemId
           }
      }
      public var itemId:String {
           get {
                return builderResult.itemId
           }
           set (value) {
               builderResult.hasItemId = true
               builderResult.itemId = value
           }
      }
      public func setItemId(value:String) -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
        self.itemId = value
        return self
      }
      public func clearItemId() -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder{
           builderResult.hasItemId = false
           builderResult.itemId = ""
           return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      override public func clear() -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
        builderResult = Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest()
        return self
      }
      override public func clone() throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
        return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.builderWithPrototype(builderResult)
      }
      override public func build() throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest {
        let returnMe:Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest = builderResult
        return returnMe
      }
      public func mergeFrom(other:Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
        if other == Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest() {
         return self
        }
        if other.hasItemId {
             itemId = other.itemId
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10:
            itemId = try input.readString()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
      override class public func decodeToBuilder(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
        let resultDecodedBuilder = Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder()
        if let jsonValueItemId = jsonMap["itemId"] as? String {
          resultDecodedBuilder.itemId = jsonValueItemId
        }
        return resultDecodedBuilder
      }
      override class public func fromJSONToBuilder(data:NSData) throws -> Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder {
        let jsonData = try NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions(rawValue: 0))
        guard let jsDataCast = jsonData as? Dictionary<String,AnyObject> else {
          throw ProtocolBuffersError.InvalidProtocolBuffer("Invalid JSON data")
        }
        return try Pogoprotos.Networking.Platform.Requests.BuyItemPokeCoinsRequest.Builder.decodeToBuilder(jsDataCast)
      }
    }

  }

  final public class SendEncryptedSignatureRequest : GeneratedMessage, GeneratedMessageProtocol {
    public private(set) var hasEncryptedSignature:Bool = false
    public private(set) var encryptedSignature:NSData = NSData()

    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasEncryptedSignature {
        try output.writeData(1, value:encryptedSignature)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasEncryptedSignature {
        serialize_size += encryptedSignature.computeDataSize(1)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest> {
      var mergedArray = Array<Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest? {
      return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest {
      return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder().mergeFromData(data, extensionRegistry:Pogoprotos.Networking.Platform.Requests.PogoprotosNetworkingPlatformRequestsRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest {
      return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest {
      return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest {
      return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest {
      return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest {
      return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
      return Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.classBuilder() as! Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder
    }
    public func getBuilder() -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
      return classBuilder() as! Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder
    }
    override public class func classBuilder() -> MessageBuilder {
      return Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder()
    }
    override public func classBuilder() -> MessageBuilder {
      return Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder()
    }
    public func toBuilder() throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
      return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
      return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder().mergeFrom(prototype)
    }
    override public func encode() throws -> Dictionary<String,AnyObject> {
      guard isInitialized() else {
        throw ProtocolBuffersError.InvalidProtocolBuffer("Uninitialized Message")
      }

      var jsonMap:Dictionary<String,AnyObject> = Dictionary<String,AnyObject>()
      if hasEncryptedSignature {
        jsonMap["encryptedSignature"] = encryptedSignature.base64EncodedStringWithOptions(NSDataBase64EncodingOptions(rawValue: 0))
      }
      return jsonMap
    }
    override class public func decode(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest {
      return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder.decodeToBuilder(jsonMap).build()
    }
    override class public func fromJSON(data:NSData) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest {
      return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder.fromJSONToBuilder(data).build()
    }
    override public func getDescription(indent:String) throws -> String {
      var output = ""
      if hasEncryptedSignature {
        output += "\(indent) encryptedSignature: \(encryptedSignature) \n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasEncryptedSignature {
               hashCode = (hashCode &* 31) &+ encryptedSignature.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest"
    }
    override public func className() -> String {
        return "Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest = Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest()
      public func getMessage() -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasEncryptedSignature:Bool {
           get {
                return builderResult.hasEncryptedSignature
           }
      }
      public var encryptedSignature:NSData {
           get {
                return builderResult.encryptedSignature
           }
           set (value) {
               builderResult.hasEncryptedSignature = true
               builderResult.encryptedSignature = value
           }
      }
      public func setEncryptedSignature(value:NSData) -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
        self.encryptedSignature = value
        return self
      }
      public func clearEncryptedSignature() -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder{
           builderResult.hasEncryptedSignature = false
           builderResult.encryptedSignature = NSData()
           return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      override public func clear() -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
        builderResult = Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest()
        return self
      }
      override public func clone() throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
        return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.builderWithPrototype(builderResult)
      }
      override public func build() throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest {
        let returnMe:Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest = builderResult
        return returnMe
      }
      public func mergeFrom(other:Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
        if other == Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest() {
         return self
        }
        if other.hasEncryptedSignature {
             encryptedSignature = other.encryptedSignature
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10:
            encryptedSignature = try input.readData()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
      override class public func decodeToBuilder(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
        let resultDecodedBuilder = Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder()
        if let jsonValueEncryptedSignature = jsonMap["encryptedSignature"] as? String {
          resultDecodedBuilder.encryptedSignature = NSData(base64EncodedString:jsonValueEncryptedSignature, options: NSDataBase64DecodingOptions(rawValue:0))!
        }
        return resultDecodedBuilder
      }
      override class public func fromJSONToBuilder(data:NSData) throws -> Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder {
        let jsonData = try NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions(rawValue: 0))
        guard let jsDataCast = jsonData as? Dictionary<String,AnyObject> else {
          throw ProtocolBuffersError.InvalidProtocolBuffer("Invalid JSON data")
        }
        return try Pogoprotos.Networking.Platform.Requests.SendEncryptedSignatureRequest.Builder.decodeToBuilder(jsDataCast)
      }
    }

  }

}

// @@protoc_insertion_point(global_scope)
